{
    "appid": "6ad059cc-339e-460b-b10f-2edeb519127c",
    "name": "Box",
    "description": "Perform various actions in a box environment",
    "type": "information",
    "product_vendor": "Box",
    "logo": "logo_box.svg",
    "logo_dark": "logo_box_dark.svg",
    "product_name": "Box",
    "product_version_regex": ".*",
    "publisher": "Splunk Community",
    "license": "Copyright (c) 2021-2025 Splunk Inc.",
    "app_version": "1.0.3",
    "utctime_updated": "2022-01-07T20:34:14.000000Z",
    "package_name": "phantom_box",
    "python_version": "3",
    "main_module": "box_connector.py",
    "min_phantom_version": "5.3.0",
    "fips_compliant": true,
    "app_wizard_version": "1.0.0",
    "pip_dependencies": {
        "wheel": [
            {
                "module": "PyJWT",
                "input_file": "wheels/py3/PyJWT-2.4.0-py3-none-any.whl"
            }
        ]
    },
    "configuration": {
        "client_id": {
            "description": "Client ID",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "client_secret": {
            "description": "Client secret",
            "data_type": "password",
            "required": true,
            "order": 1
        },
        "public_key": {
            "description": "Public key",
            "data_type": "string",
            "required": true,
            "order": 2
        },
        "private_key": {
            "description": "Private key (decrypted)",
            "data_type": "password",
            "required": true,
            "order": 3
        },
        "box_user_id": {
            "description": "User ID found on app general screen",
            "data_type": "string",
            "required": true,
            "order": 4
        },
        "box_key_id": {
            "description": "Key ID of the box key pair being used (located on configuration page)",
            "data_type": "string",
            "required": true,
            "order": 5
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "upload file",
            "identifier": "upload_file",
            "description": "Upload file to a box folder",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "file_name": {
                    "description": "Name of file to be created",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "folder_id": {
                    "description": "Box folder ID to create file in. Enter \"0\" to create in root",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                },
                "vault_id": {
                    "description": "Phantom vault ID of file to be created in box",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "vault id"
                    ],
                    "order": 2
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.file_name",
                    "data_type": "string",
                    "column_name": "File Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.folder_id",
                    "data_type": "string",
                    "column_name": "Folder ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "column_name": "Vault ID",
                    "column_order": 2,
                    "contains": [
                        "vault id"
                    ]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 3,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.file_id",
                    "data_type": "string",
                    "column_name": "File ID",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.sha1",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "create folder",
            "identifier": "create_folder",
            "description": "Create a folder in box",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "folder_name": {
                    "description": "Name of folder to be created",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "parent_id": {
                    "description": "Box folder ID to create folder in. Enter \"0\" to create in root",
                    "data_type": "string",
                    "required": true,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.parent_id",
                    "data_type": "string",
                    "column_name": "Parent Folder ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.folder_name",
                    "data_type": "string",
                    "column_name": "Folder Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 3,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.summary.folder_id",
                    "data_type": "string",
                    "column_name": "Folder ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.item_collection.total_count",
                    "example_values": [
                        0
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.item_collection.limit",
                    "example_values": [
                        100
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.item_collection.offset",
                    "example_values": [
                        0
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.size",
                    "example_values": [
                        0
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.purged_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.folder_upload_email",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.shared_link",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.path_collection.total_count",
                    "example_values": [
                        2
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.path_collection.entries.*.sequence_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.path_collection.entries.*.etag",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.trashed_at",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.parent.sequence_id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.parent.etag",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}
